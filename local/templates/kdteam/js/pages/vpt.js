(function(){var t,i;t=this.jQuery||window.jQuery,i=t(window),t.fn.stick_in_parent=function(o){var s,e,n,r,l,c,a,f,h,p,d,u;for(null==o&&(o={}),u=o.sticky_class,c=o.inner_scrolling,d=o.recalc_every,p=o.parent,h=o.offset_top,f=o.spacer,n=o.bottoming,null==h&&(h=80),null==p&&(p=void 0),null==c&&(c=!0),null==u&&(u="is_stuck"),s=t(document),null==n&&(n=!0),r=function(o,e,r,l,a,k,g,m){var v,y,_,b,$,w,x,T,C,D,I,z;if(!o.data("sticky_kit")){if(o.data("sticky_kit",!0),$=s.height(),x=o.parent(),null!=p&&(x=x.closest(p)),!x.length)throw"failed to find stick parent";if(_=!1,v=!1,I=null!=f?f&&o.closest(f):t("<div />"),I&&I.css("position",o.css("position")),T=function(){var t,i,n;if(!m)return $=s.height(),t=parseInt(x.css("border-top-width"),10),i=parseInt(x.css("padding-top"),10),e=parseInt(x.css("padding-bottom"),10),r=x.offset().top+t+i,l=x.height(),_&&(_=!1,v=!1,null==f&&(o.insertAfter(I),I.detach()),o.css({position:"",top:"",width:"",bottom:""}).removeClass(u),n=!0),a=o.offset().top-(parseInt(o.css("margin-top"),10)||0)-h,k=o.outerHeight(!0),g=o.css("float"),I&&I.css({width:o.outerWidth(!0),height:k,display:o.css("display"),"vertical-align":o.css("vertical-align"),"float":g}),n?z():void 0},T(),k!==l)return b=void 0,w=h,D=d,z=function(){var t,p,y,C,z,A;if(!m)return y=!1,null!=D&&(D-=1,D<=0&&(D=d,T(),y=!0)),y||s.height()===$||(T(),y=!0),C=i.scrollTop(),null!=b&&(p=C-b),b=C,_?(n&&(z=C+k+w>l+r,v&&!z&&(v=!1,o.css({position:"fixed",bottom:"",top:w}).trigger("sticky_kit:unbottom"))),C<a&&(_=!1,w=h,null==f&&("left"!==g&&"right"!==g||o.insertAfter(I),I.detach()),t={position:"",width:"",top:""},o.css(t).removeClass(u).trigger("sticky_kit:unstick")),c&&(A=i.height(),k+h>A&&(v||(w-=p,w=Math.max(A-k,w),w=Math.min(h,w),_&&o.css({top:w+"px"}))))):C>a&&(_=!0,t={position:"fixed",top:w},t.width="border-box"===o.css("box-sizing")?o.outerWidth()+"px":o.width()+"px",o.css(t).addClass(u),null==f&&(o.after(I),"left"!==g&&"right"!==g||I.append(o)),o.trigger("sticky_kit:stick")),_&&n&&(null==z&&(z=C+k+w>l+r),!v&&z)?(v=!0,"static"===x.css("position")&&x.css({position:"relative"}),o.css({position:"absolute",bottom:e,top:"auto"}).trigger("sticky_kit:bottom")):void 0},C=function(){return T(),z()},y=function(){if(m=!0,i.off("touchmove",z),i.off("scroll",z),i.off("resize",C),t(document.body).off("sticky_kit:recalc",C),o.off("sticky_kit:detach",y),o.removeData("sticky_kit"),o.css({position:"",bottom:"",top:"",width:""}),x.position("position",""),_)return null==f&&("left"!==g&&"right"!==g||o.insertAfter(I),I.remove()),o.removeClass(u)},i.on("touchmove",z),i.on("scroll",z),i.on("resize",C),t(document.body).on("sticky_kit:recalc",C),o.on("sticky_kit:detach",y),setTimeout(z,0)}},l=0,a=this.length;l<a;l++)e=this[l],r(t(e));return this}}).call(this),$(document).ready(function(){$(window).on("click",".landing--block_left--small_p",function(t){t.preventDefault();var i=$(this).attr("href"),o=$(i).offset().top;$("body,html").animate({scrollTop:o},1500)}),$(".landing--block_left").on("click","a",function(t){t.preventDefault();var i=$(this).attr("href"),o=$(i).offset().top;$(".header").height()+30;$("body,html").animate({scrollTop:o},1500)}),$(".seven").on("click","a",function(t){t.preventDefault();var i=$(this).attr("href"),o=$(i).offset().top;$(".header").height()+30;$("body,html").animate({scrollTop:o},1500)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
